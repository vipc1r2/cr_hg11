命令行执行：pytest unit/
生成xml报告： pytest --junitxml=unit/junit.xml unit/
生成html报告： pytest --html=report.html

------------------------
分组，在脚本中加入这行，@pytest.mark.happy
命令执行：pytest -m "happy"
备注：pycharm右键运行是不行的


# 参数化
@pytest.mark.parametrize("number1, number2, expection", {
    (10, 2, 5),
    (10, 5, 3),
    (1000000000, 1, 1000000000),
    (100, 200, 0.5)
})


----------------
allure2报告：
 pytest --junitxml=unit/junit.xml --alluredir=unit/allure_results unit/
 allure serve unit/allure_results/

 不想serve打开报告，可以打包生成到一个文件里,/tmp/allure-html自己想要存放到路径
 allure generate unit/allure_results/ -o /tmp/allure-html

 python2用
 python -m CGIHTTPSever

 python3用
 python3 -m http.server （在本地开启8000端口网址http://0.0.0.0:8000，可以查看报告）